<?php

/**
 * @file
 * Contains install hooks for acm.
 */

use Drupal\Core\Url;
use Drupal\user\Entity\Role;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_install().
 */
function acm_install() {
  // Create empty ACM role.
  try {
    $role = Role::create(['id' => 'acm', 'label' => 'ACM']);
    $role->save();
  }
  catch (\Exception $e) {
    \Drupal::logger('acm')->info('ACM role already exists');
  }
}

/**
 * Implements hook_requirements().
 */
function acm_requirements($phase) {
  $requirements = [];

  if ($phase != 'runtime') {
    return $requirements;
  }

  $link_generator = \Drupal::service('link_generator');
  $internal_url = Url::fromRoute('acm.configuration.purge_queue');
  $internal_link = $link_generator->generate('here', $internal_url);

  $requirements[] = [
    'title' => t('Acquia Commerce Manager: Queue status'),
    'value' => t('@countItems items', ['@countItems' => \Drupal::service('acm.api')->getQueueStatus()]),
    'description' => t("This number represents number of items in Commerce Connector Service Queue. It doesn't show number of items which are currently being processed. You can purge queue @here.",
      ['@here' => $internal_link]),
  ];

  return $requirements;
}

/**
 * Delete ACM ID global config.
 */
function acm_update_8001() {
  \Drupal::configFactory()
    ->getEditable('acm_commerce.connector')->clear('acm_id')->delete();
}

/**
 * Create empty ACM role.
 */
function acm_update_8002() {
  try {
    $role = Role::create(['id' => 'acm', 'label' => 'ACM']);
    $role->save();
  }
  catch (\Exception $e) {
    \Drupal::logger('acm')->info('ACM role already exists');
  }
}

/**
 * Implements hook_update_N().
 *
 * Create new configuration - acm.commerce_users.
 */
function acm_update_8003() {
  $config = \Drupal::configFactory()->getEditable('acm.commerce_users');

  if (empty($config->getRawData())) {
    $config_path = drupal_get_path('module', 'acm') . '/config/install/acm.commerce_users.yml';
    $data = Yaml::parse((file_get_contents($config_path)));
    $config->setData($data)->save(TRUE);
  }
}
